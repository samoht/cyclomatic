(* This file has a long function that should be flagged *)

let process_config flags =
  let verbose = List.mem "verbose" flags in
  let debug = List.mem "debug" flags in
  let trace = List.mem "trace" flags in
  let info = List.mem "info" flags in
  let warning = List.mem "warning" flags in
  let error = List.mem "error" flags in
  let fatal = List.mem "fatal" flags in
  let quiet = List.mem "quiet" flags in
  let silent = List.mem "silent" flags in
  let log_to_file = List.mem "log_to_file" flags in
  let log_to_stdout = List.mem "log_to_stdout" flags in
  let log_to_stderr = List.mem "log_to_stderr" flags in
  let enable_colors = List.mem "enable_colors" flags in
  let disable_colors = List.mem "disable_colors" flags in
  let show_timestamps = List.mem "show_timestamps" flags in
  let hide_timestamps = List.mem "hide_timestamps" flags in
  let show_location = List.mem "show_location" flags in
  let hide_location = List.mem "hide_location" flags in
  let show_thread_id = List.mem "show_thread_id" flags in
  let hide_thread_id = List.mem "hide_thread_id" flags in
  let buffer_output = List.mem "buffer_output" flags in
  let flush_immediately = List.mem "flush_immediately" flags in
  let rotate_logs = List.mem "rotate_logs" flags in
  let compress_logs = List.mem "compress_logs" flags in
  let max_file_size = List.mem "max_file_size" flags in
  let max_file_count = List.mem "max_file_count" flags in
  let daily_rotation = List.mem "daily_rotation" flags in
  let hourly_rotation = List.mem "hourly_rotation" flags in
  let enable_syslog = List.mem "enable_syslog" flags in
  let disable_syslog = List.mem "disable_syslog" flags in
  let custom_format = List.mem "custom_format" flags in
  let json_format = List.mem "json_format" flags in
  let xml_format = List.mem "xml_format" flags in
  let plain_format = List.mem "plain_format" flags in
  let structured_format = List.mem "structured_format" flags in
  let include_metadata = List.mem "include_metadata" flags in
  let exclude_metadata = List.mem "exclude_metadata" flags in
  let filter_by_module = List.mem "filter_by_module" flags in
  let filter_by_level = List.mem "filter_by_level" flags in
  let filter_by_regex = List.mem "filter_by_regex" flags in
  let enable_sampling = List.mem "enable_sampling" flags in
  let disable_sampling = List.mem "disable_sampling" flags in
  let sample_rate = List.mem "sample_rate" flags in
  let enable_aggregation = List.mem "enable_aggregation" flags in
  let disable_aggregation = List.mem "disable_aggregation" flags in
  let aggregation_window = List.mem "aggregation_window" flags in
  let enable_alerting = List.mem "enable_alerting" flags in
  let disable_alerting = List.mem "disable_alerting" flags in
  let alert_threshold = List.mem "alert_threshold" flags in
  let alert_cooldown = List.mem "alert_cooldown" flags in
  let enable_metrics = List.mem "enable_metrics" flags in
  let disable_metrics = List.mem "disable_metrics" flags in
  let metric_interval = List.mem "metric_interval" flags in
  let metric_prefix = List.mem "metric_prefix" flags in
  let enable_tracing = List.mem "enable_tracing" flags in
  let disable_tracing = List.mem "disable_tracing" flags in
  let trace_sample_rate = List.mem "trace_sample_rate" flags in
  let trace_propagation = List.mem "trace_propagation" flags in
  let enable_profiling = List.mem "enable_profiling" flags in
  let disable_profiling = List.mem "disable_profiling" flags in
  (* Process all the flags *)
  ()